#############原文网址：https://www.jianshu.com/p/d908ce81017a?nomobile=yes


1. 通过 Vundle 来安装 YCM（官方推荐）

在 vim 的配置文件 ~/.vimrc 中添加一行（在call vundle#begin() 和 call vundle#end() 之间）

call vundle#begin()
. . . 
Plugin 'Valloric/YouCompleteMe’
. . .
call vundle#end()

然后保存运行 vim 命令 :PluginInstall 安装 需要特别注意的是这个时候可能等的时间会相当的长

2 通过 Git 安装 YCM

如果你跟老夫一样，等待 Vundle 安装 YCM 等了好久终于貌似好像成功了，打开 vim 却发现 YouCompleteme unavailable : no module named future （当然没有遇到算你运气好），那么你应该考虑一下换用 Git 来安装 YCM：

# 下载 （在 `～/.vim/bundle` 目录下） 
$ git clone --recursive [https://github.com/Valloric/YouCompleteMe.git](https://github.com/Valloric/YouCompleteMe.git) 
# 检查完整性（在 `～/.vim/bundle/YouCompleteMe` 目录下） 
$ git submodule update --init --recursive

2.1 下载安装最新版的 libclang

如果不需要 C 家族的语义化补全，则可跳过这一步

# apt-get install llvm-3.9 clang-3.9 libclang-3.9-dev libboost-all-dev

PS: ** YCM 官方墙烈推荐使用上游编译的二进制文件代替系统自带的 libclang**

    You can use the system libclang only if you are sure it is version 3.9 or higher, otherwise don't. Even if it is, we recommend using the official binaries from llvm.org if at all possible. Make sure you download the correct archive file for your OS.

    We STRONGLY recommend AGAINST use of the system libclang instead of the upstream compiled binaries. Random things may break. Save yourself the hassle and use the upstream pre-built libclang.

2.2 编译构建 ycm_core 库(** 需要：cmake python3-dev**)

YCM 的顶层目录或者说根目录应该是 ～/.vim/bundle/YouCompleteMe

创建一个目录放编译过程中产生的文件

$ mkdir ~/.ycm_build
$ cd ~/.ycm_build

生成 makefile

如果跳过第三步的话，则可以直接运行

$ cmake -G "Unix Makefiles" . ~/.vim/bundle/YouCompleteMe/third_party/ycmd/cpp

如果没有跳过第三步，说明需要 c 家族的语义化补全则需运行

$ cmake -G "Unix Makefiles" -DUSE_SYSTEM_BOOST=ON DUSE_SYSTEM_LIBCLANG=ON . ~/.vim/bundle/YouCompleteMe/third_party/ycmd/cpp

编译通过的，没有报错，但是这个编译结果是有问题的，看第 3 行，反复强调的 c 家族的语义补全没有了。经过老夫反复的检查，原来是上面的编译命令少了一个 - 符号

$ cmake -G "Unix Makefiles" -DUSE_SYSTEM_BOOST=ON -DUSE_SYSTEM_LIBCLANG=ON . ~/.vim/bundle/YouCompleteMe/third_party/ycmd/cpp

其实这个还是有问题的，看倒数第 3、4 行，使用的是外部的 libclang-3.6 ，第 2 步中说的系统安装的 libclang 最低要是是 3.9。
这个时候就需要删除 ~/.ycm_build 目录下的所有文件，使用下面的命令指定 libclang 的版本重新编译。

$ cmake -G "Unix Makefiles" -DUSE_SYSTEM_BOOST=ON -DEXTERNAL_LIBCLANG_PATH=/usr/lib/x86_64-linux-gnu/libclang-3.9.so . ~/.vim/bundle/YouCompleteMe/third_party/ycmd/cpp

构建 ycm_core

#  --config Release 这个构建选项进针对 Windows
$ cmake --build . --target ycm_core --config Release

2.3 配置

复制 .ycm_extra_conf.py 文件

$ cp ~/.vim/bundle/YouCompleteMe/third_party/ycmd/examples/.ycm_extra_conf.py ~/.vim/

添加 vim 配置
注意下面的 python 解释器的路径要和编译 ycm_core 的时候使用的 python 解释器是相同的版本（2 或 3）

“ ～/.vimrc
let g:ycm_server_python_interpreter='/usr/bin/python'
let g:ycm_global_ycm_extra_conf='~/.vim/.ycm_extra_conf.py'

2.4 其他语言的支持

C#、Go、TypeScript、 JavaScript、 Rust support
由于老夫对这些语言没有太多的涉猎就不做介绍了。

2.5 测试安装

首先新建一个 hello.c 文件，


可以看到自动补全了头文件，厉害了老夫的 YCM

然后在 vim 中运行 :YcmToggleLogs stderr 命令查看错误日志，

没有看到报错信息，则证明 YCM 已成功安装。
