#在下载之前建议全局翻墙
1.1 通过 Vundle 来安装 YCM（官方推荐）(YCM比较特殊，安装之后后边仍需要编译，这一步类似于下载)

在 vim 的配置文件 ~/.vimrc 中添加一行（在call vundle#begin() 和 call vundle#end() 之间）

call vundle#begin()
. . . 
Plugin 'Valloric/YouCompleteMe’
. . .
call vundle#end()

然后保存运行 vim 命令 :PluginInstall(或者直接在命令行运行vim +BundleInstall +qall) 安装 需要特别注意的是这个时候可能等的时间会相当的长

1.2 通过 Git 安装 YCM

如果你跟老夫一样，等待 Vundle 安装 YCM 等了好久终于貌似好像成功了，打开 vim 却发现 YouCompleteme unavailable : no module named future （当然没有遇到算你运气好），那么你应该考虑一下换用 Git 来安装 YCM：

# 下载 （在 `～/.vim/bundle` 目录下） 
$ git clone --recursive [https://github.com/Valloric/YouCompleteMe.git](https://github.com/Valloric/YouCompleteMe.git) 
# 检查完整性（在 `～/.vim/bundle/YouCompleteMe` 目录下） 
$ git submodule update --init --recursive

2 下载安装最新版的 libclang

如果不需要 C 家族的语义化补全，则可跳过这一步

# apt-get install llvm-3.9 clang-3.9 libclang-3.9-dev libboost-all-dev

PS: ** YCM 官方墙烈推荐使用上游编译的二进制文件代替系统自带的 libclang**

    You can use the system libclang only if you are sure it is version 3.9 or higher, otherwise don't. Even if it is, we recommend using the official binaries from llvm.org if at all possible. Make sure you download the correct archive file for your OS.

    We STRONGLY recommend AGAINST use of the system libclang instead of the upstream compiled binaries. Random things may break. Save yourself the hassle and use the upstream pre-built libclang.

3 编译Ycm

如果需要对C家族的语言进行语义补全支持：
$ cd YouCompleteMe
$ ./install.py --clang-completer

如果不需要对C家族的语言进行语义补全支持：
$ cd YouCompleteMe
$ ./install.py

或者使用参数--all添加所有的补全，包括（C/C++/C#/go/python/php等）

##一个文档说编译结束之后在vim中执行如下指令便可以完成安装，但我用的另一种方法，也就是后边的配置步骤，在文档后边可以查阅到
:PlugInstall YouCompleteMe


4 配置

复制 .ycm_extra_conf.py 文件

$ cp ~/.vim/bundle/YouCompleteMe/third_party/ycmd/examples/.ycm_extra_conf.py ~/.vim/

添加 vim 配置
注意下面的 python 解释器的路径要和编译 ycm_core 的时候使用的 python 解释器是相同的版本（2 或 3）

“ ～/.vimrc
let g:ycm_server_python_interpreter='/usr/bin/python'
let g:ycm_global_ycm_extra_conf='~/.vim/.ycm_extra_conf.py'

至此已完成Ycm安装，可以编辑文件测试是否成功
